#!/bin/bash
# This must be renamed to the name of the relation. The goal here is to
# affect any change needed by relationships being formed, modified, or broken
# This script should be idempotent.
set -eux 

juju-log $JUJU_REMOTE_UNIT modified its settings
juju-log Relation settings:
relation-get
juju-log Relation members:
relation-list


# Get the database settings; if not set, wait for this hook to be
# invoked again
host=`relation-get private-address`
if [ -z "$host" ] ; then
    juju-log "no host found in relation private-address"
    exit 0 # wait for future handshake from database service unit
fi

relation_port=`relation-get port`
port=${relation_port:-27017}

install_root=`config-get install_root`
app_name=`config-get app_name`
app_dir="$install_root/$app_name"


configure_app() {
  cd $app_dir
  juju-log "configuring ${app_name} to work with the mongodb service"

  config_file_path=$app_dir/src/config/config.js

  if [ -f $config_file_path ]; then
    juju-log "Writing $app_name config file $config_file_path"
    sed -i "s/.*,\"mongo_host\".*/,\"mongo_host\": \"${host}\"/" $config_file_path
    sed -i "s/.*,\"mongo_port\".*/,\"mongo_port\": ${port}/" $config_file_path    
    juju-log `cat $config_file_path`
  fi
}
configure_app

juju-log "(re)starting app"
npm run restart
